name: High_Level Whale Monitor (LBank) - Debuggable

on:
  schedule:
    - cron: "*/5 * * * *"   # Ÿáÿ± 5 ÿØŸÇ€åŸÇŸá (ÿßÿÆÿ™€åÿßÿ±€å)
  workflow_dispatch:         # ÿßÿ¨ÿ±ÿß€å ÿØÿ≥ÿ™€å ŸáŸÖ ŸÅÿπÿßŸÑ

concurrency:
  group: High_Level-lbank
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./   # ÿßÿ¨ÿ±ÿß€å ŸáŸÖŸá ÿØÿ≥ÿ™Ÿàÿ±ÿßÿ™ ÿØÿ± ÿ±€åÿ¥Ÿá ÿ±€åŸæŸà

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies (safe)
      run: |
        if [ -f requirements.txt ]; then
          echo "üîÅ Installing from requirements.txt"
          pip install -r requirements.txt
        else
          echo "‚ö†Ô∏è requirements.txt not found ‚Äî installing minimal deps"
          pip install requests pandas loguru
        fi

    - name: Ensure logs & data folders exist
      run: |
        mkdir -p data
        mkdir -p logs

    - name: Run High_Level script (try different filenames)
      run: |
        echo "üöÄ Starting Hi-Level script..."
        if [ -f high_level.py ]; then
          python high_level.py || (echo "‚ùå high_level.py failed" && exit 1)
        elif [ -f High_Level.py ]; then
          python High_Level.py || (echo "‚ùå High_Level.py failed" && exit 1)
        elif [ -f fetch_and_notify.py ]; then
          python fetch_and_notify.py || (echo "‚ùå fetch_and_notify.py failed" && exit 1)
        else
          echo "‚ö†Ô∏è No recognized script found (high_level.py / High_Level.py / fetch_and_notify.py)"
        fi

    - name: Show run_log.txt (last 200 lines)
      run: |
        if [ -f logs/run_log.txt ]; then
          echo "üìú Showing last 200 lines of logs/run_log.txt"
          tail -n 200 logs/run_log.txt || true
        elif [ -f run_log.txt ]; then
          echo "üìú Showing last 200 lines of run_log.txt"
          tail -n 200 run_log.txt || true
        else
          echo "‚ö†Ô∏è run_log.txt not found"
        fi

    - name: Commit and push CSV & logs (if any)
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git pull --rebase origin main || true
        git add data/data.csv logs/run_log.txt || echo "No files to add"
        git commit -m "Update whale data.csv [skip ci]" || echo "No changes to commit"
        git push origin main || echo "Nothing to push"

    - name: Debug and Show data CSV (safe)
      run: |
        echo "üìÅ Repo root:"
        ls -la || true
        echo
        echo "üìÇ data folder contents:"
        if [ -d data ]; then
          ls -la data || true
          echo
          for f in data/*; do
            [ -e "$f" ] || continue
            echo "---- FILE: $f ----"
            # portable file info
            if command -v stat >/dev/null 2>&1; then
              stat -c '%n %s bytes %U %G %A' "$f" 2>/dev/null || stat "$f" || true
            fi
            file "$f" 2>/dev/null || true
            echo "lines: $(wc -l < "$f" 2>/dev/null || echo unknown)"
            echo "---- first 20 lines ----"
            head -n 20 "$f" || true
            echo
          done
        else
          echo "‚ö†Ô∏è data folder not found"
        fi
